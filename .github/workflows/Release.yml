name: Release

on:
  push:
    tags:
      - '*'

  workflow_dispatch:

jobs:
  Release:
    runs-on: [self-hosted]
    env:
        PROJECT_PATH: ".\\"
        BUILD_METHOD_WIN64: "BuildProject.BuildWindows64"
        gameName: "Haste"
        projectVersion: 
    steps:
      - uses: actions/checkout@v2  
      - name: Build For Windows 64 bits
        run: |
          $env:projectVersion = ${ GITHUB_REF#refs/tags/ }
          Start-Process -Wait 'C:\Program Files\Unity\Hub\Editor\2020.3.12f1\Editor\Unity.exe' -ArgumentList "-nographics -batchmode -projectPath $env:PROJECT_PATH -executeMethod $env:BUILD_METHOD_WIN64 -quit"
      - name: Create_Setup 
        run: |
          $output = ".\Setup.exe"
          $input = "$env:PROJECT_PATH\Builds\${ GITHUB_REF#refs/tags/ }\Win64"
          cd $input
          Start-Process -Wait 'C:\Program Files\7-Zip\7z.exe' -ArgumentList "-nographics a -sfx7z.sfx $output .\"
          echo "$output\Setup.exe"
        id: create_setup
      - name: Create_Release
        uses: actions/create-release@v1
        id: create_release
        with:
          draft: false
          prerelease: false
          release_name: "v ${ GITHUB_REF#refs/tags/ }"
          tag_name: ${ GITHUB_REF#refs/tags/ }
          body_path: Changelog.md
        env:
          GITHUB_TOKEN: ${{ github.token }}
      - name: Upload Release
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ github.token }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ${{ steps.create_setup.outputs.setup }}
          asset_name: Setup.exe
          asset_content_type: application/exe